// Generated by the MyRPC compiler v1.0.0 . DO NOT EDIT!
// 当调用 MySvrHandler 时，它会检查 req 中的 rpc_name() 是否与 "EchoMySelf"、"OneWay" 或 "FastResp" 匹配。
// 如果匹配，RPC_HANDLER 会解析 req 数据并调用相应的处理函数，例如 EchoMySelf，并生成相应的响应数据。
// 该响应会被序列化并填充到 resp 中，然后返回。
#pragma once

#include <set>
#include <string>

#include "../../common/log.hpp"
#include "../../common/utils.hpp"
#include "../../core/handler.hpp"
#include "../../core/mysvrclient.hpp"
#include "../../protocol/base.pb.h"
#include "proto/echo.pb.h"

using namespace MySvr::Base;
using namespace MySvr::Echo;

class EchoHandler : public Core::MyHandler {
 public:
  EchoHandler() {
    service_name_ = std::string{"Echo"};
    rpc_names_ = std::unordered_set<std::string>{"EchoMySelf", "OneWay", "FastResp"};
  }
  void MySvrHandler(Protocol::MySvrMessage &req, Protocol::MySvrMessage &resp) {
    RPC_HANDLER("EchoMySelf", EchoMySelf, EchoMySelfRequest, EchoMySelfResponse, req, resp);
    RPC_HANDLER("OneWay", OneWay, OneWayMessage, OneWayResponse, req, resp);
    RPC_HANDLER("FastResp", FastResp, FastRespRequest, FastRespResponse, req, resp);
  }
  int EchoMySelf(EchoMySelfRequest &request, EchoMySelfResponse &response);
  int OneWay(OneWayMessage &request, OneWayResponse &response);
  int FastResp(FastRespRequest &request, FastRespResponse &response);
};
